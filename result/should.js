/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['should.js']) {
  _$jscoverage['should.js'] = [];
  _$jscoverage['should.js'][1] = 0;
  _$jscoverage['should.js'][3] = 0;
  _$jscoverage['should.js'][4] = 0;
  _$jscoverage['should.js'][5] = 0;
  _$jscoverage['should.js'][6] = 0;
  _$jscoverage['should.js'][7] = 0;
}
_$jscoverage['should.js'].source = ["var should = require('should');","","describe('Array', function () {","    describe('#indexOf', function () {","        it('sholud return -1 when the value is not present', function () {","            [1, 2, 3].indexOf(5).should.equal(-1);","            [1, 2, 3].indexOf(1).should.equal(0);","        });","    });","});","","/*","describe('Array&#233;&#154;&#143;&#228;&#190;&#191;&#229;&#143;&#150;',function(){","   describe('#indexOf',function(){","       it('aa',function(){","//&#229;&#133;&#183;&#228;&#189;&#147;&#231;&#154;&#132;&#230;&#181;&#139;&#232;&#175;&#149;&#232;&#175;&#173;&#229;&#143;&#165;","","       });","   })","});*/"];
_$jscoverage['should.js'][1]++;
var should = require("should");
_$jscoverage['should.js'][3]++;
describe("Array", (function () {
  _$jscoverage['should.js'][4]++;
  describe("#indexOf", (function () {
  _$jscoverage['should.js'][5]++;
  it("sholud return -1 when the value is not present", (function () {
  _$jscoverage['should.js'][6]++;
  [1, 2, 3].indexOf(5).should.equal(-1);
  _$jscoverage['should.js'][7]++;
  [1, 2, 3].indexOf(1).should.equal(0);
}));
}));
}));
